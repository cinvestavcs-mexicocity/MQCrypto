# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = mqcrypto$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_mqcrypto_OBJECTS = mqcrypto-mqcrypto.$(OBJEXT) \
	asn1/mqcrypto-ASN1Encode.$(OBJEXT) \
	asn1/mqcrypto-BIT_STRING.$(OBJEXT) \
	asn1/mqcrypto-IA5String.$(OBJEXT) \
	asn1/mqcrypto-MPKCKeypair.$(OBJEXT) \
	asn1/mqcrypto-MPKCMessage.$(OBJEXT) \
	asn1/mqcrypto-MPKCPrivateKey.$(OBJEXT) \
	asn1/mqcrypto-MPKCPublicKey.$(OBJEXT) \
	asn1/mqcrypto-MPKCSignature.$(OBJEXT) \
	asn1/mqcrypto-OCTET_STRING.$(OBJEXT) \
	asn1/mqcrypto-asn_codecs_prim.$(OBJEXT) \
	asn1/mqcrypto-ber_decoder.$(OBJEXT) \
	asn1/mqcrypto-ber_tlv_length.$(OBJEXT) \
	asn1/mqcrypto-ber_tlv_tag.$(OBJEXT) \
	asn1/mqcrypto-constr_SEQUENCE.$(OBJEXT) \
	asn1/mqcrypto-constr_TYPE.$(OBJEXT) \
	asn1/mqcrypto-constraints.$(OBJEXT) \
	asn1/mqcrypto-der_encoder.$(OBJEXT) \
	asn1/mqcrypto-per_decoder.$(OBJEXT) \
	asn1/mqcrypto-per_encoder.$(OBJEXT) \
	asn1/mqcrypto-per_opentype.$(OBJEXT) \
	asn1/mqcrypto-per_support.$(OBJEXT) \
	asn1/mqcrypto-xer_decoder.$(OBJEXT) \
	asn1/mqcrypto-xer_encoder.$(OBJEXT) \
	asn1/mqcrypto-xer_support.$(OBJEXT)
mqcrypto_OBJECTS = $(am_mqcrypto_OBJECTS)
mqcrypto_DEPENDENCIES = b64/libb64.a
mqcrypto_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(mqcrypto_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(mqcrypto_SOURCES)
DIST_SOURCES = $(mqcrypto_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POW_LIB = @POW_LIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libsodium_CFLAGS = @libsodium_CFLAGS@
libsodium_LIBS = @libsodium_LIBS@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
openssl_CFLAGS = @openssl_CFLAGS@
openssl_LIBS = @openssl_LIBS@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
SUBDIRS = sage
AM_FLAGS = -O2 -std=c++11 -mmmx -msse -msse2 -msse3 -msse4.1
WARNING_FLAGS = -Wno-write-strings -Wno-deprecated-register -Wno-format-security -fno-strict-aliasing -Wno-unused-result
mqcrypto_SOURCES = \
        mqcrypto.cpp \
        asn1/ASN1Encode.cpp \
        asn1/BIT_STRING.cpp \
        asn1/IA5String.cpp \
        asn1/MPKCKeypair.cpp \
        asn1/MPKCMessage.cpp \
        asn1/MPKCPrivateKey.cpp \
        asn1/MPKCPublicKey.cpp \
        asn1/MPKCSignature.cpp \
        asn1/OCTET_STRING.cpp \
        asn1/asn_codecs_prim.cpp \
        asn1/ber_decoder.cpp \
        asn1/ber_tlv_length.cpp \
        asn1/ber_tlv_tag.cpp \
        asn1/constr_SEQUENCE.cpp \
        asn1/constr_TYPE.cpp \
        asn1/constraints.cpp \
        asn1/der_encoder.cpp \
        asn1/per_decoder.cpp \
        asn1/per_encoder.cpp \
        asn1/per_opentype.cpp \
        asn1/per_support.cpp \
        asn1/xer_decoder.cpp \
        asn1/xer_encoder.cpp \
        asn1/xer_support.cpp

mqcrypto_CPPFLAGS = @openssl_CFLAGS@ \
        @libsodium_CFLAGS@ \
        -I. \
        -Isignature \
        -Iencryption \
        -Iasn1 \
        $(AM_FLAGS) \
        $(WARNING_FLAGS)

mqcrypto_LDFLAGS = -msse4.1
mqcrypto_LDADD = @openssl_LIBS@ \
        @libsodium_LIBS@ \
        b64/libb64.a

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
asn1/$(am__dirstamp):
	@$(MKDIR_P) asn1
	@: > asn1/$(am__dirstamp)
asn1/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) asn1/$(DEPDIR)
	@: > asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-ASN1Encode.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-BIT_STRING.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-IA5String.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-MPKCKeypair.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-MPKCMessage.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-MPKCPrivateKey.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-MPKCPublicKey.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-MPKCSignature.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-OCTET_STRING.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-asn_codecs_prim.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-ber_decoder.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-ber_tlv_length.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-ber_tlv_tag.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-constr_SEQUENCE.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-constr_TYPE.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-constraints.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-der_encoder.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-per_decoder.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-per_encoder.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-per_opentype.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-per_support.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-xer_decoder.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-xer_encoder.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)
asn1/mqcrypto-xer_support.$(OBJEXT): asn1/$(am__dirstamp) \
	asn1/$(DEPDIR)/$(am__dirstamp)

mqcrypto$(EXEEXT): $(mqcrypto_OBJECTS) $(mqcrypto_DEPENDENCIES) $(EXTRA_mqcrypto_DEPENDENCIES) 
	@rm -f mqcrypto$(EXEEXT)
	$(AM_V_CXXLD)$(mqcrypto_LINK) $(mqcrypto_OBJECTS) $(mqcrypto_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f asn1/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mqcrypto-mqcrypto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-ASN1Encode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-BIT_STRING.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-IA5String.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-MPKCKeypair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-MPKCMessage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-MPKCPrivateKey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-MPKCPublicKey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-MPKCSignature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-OCTET_STRING.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-asn_codecs_prim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-ber_decoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-ber_tlv_length.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-ber_tlv_tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-constr_SEQUENCE.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-constr_TYPE.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-constraints.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-der_encoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-per_decoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-per_encoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-per_opentype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-per_support.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-xer_decoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-xer_encoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@asn1/$(DEPDIR)/mqcrypto-xer_support.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

mqcrypto-mqcrypto.o: mqcrypto.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mqcrypto-mqcrypto.o -MD -MP -MF $(DEPDIR)/mqcrypto-mqcrypto.Tpo -c -o mqcrypto-mqcrypto.o `test -f 'mqcrypto.cpp' || echo '$(srcdir)/'`mqcrypto.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/mqcrypto-mqcrypto.Tpo $(DEPDIR)/mqcrypto-mqcrypto.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='mqcrypto.cpp' object='mqcrypto-mqcrypto.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mqcrypto-mqcrypto.o `test -f 'mqcrypto.cpp' || echo '$(srcdir)/'`mqcrypto.cpp

mqcrypto-mqcrypto.obj: mqcrypto.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mqcrypto-mqcrypto.obj -MD -MP -MF $(DEPDIR)/mqcrypto-mqcrypto.Tpo -c -o mqcrypto-mqcrypto.obj `if test -f 'mqcrypto.cpp'; then $(CYGPATH_W) 'mqcrypto.cpp'; else $(CYGPATH_W) '$(srcdir)/mqcrypto.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/mqcrypto-mqcrypto.Tpo $(DEPDIR)/mqcrypto-mqcrypto.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='mqcrypto.cpp' object='mqcrypto-mqcrypto.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mqcrypto-mqcrypto.obj `if test -f 'mqcrypto.cpp'; then $(CYGPATH_W) 'mqcrypto.cpp'; else $(CYGPATH_W) '$(srcdir)/mqcrypto.cpp'; fi`

asn1/mqcrypto-ASN1Encode.o: asn1/ASN1Encode.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ASN1Encode.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ASN1Encode.Tpo -c -o asn1/mqcrypto-ASN1Encode.o `test -f 'asn1/ASN1Encode.cpp' || echo '$(srcdir)/'`asn1/ASN1Encode.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ASN1Encode.Tpo asn1/$(DEPDIR)/mqcrypto-ASN1Encode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ASN1Encode.cpp' object='asn1/mqcrypto-ASN1Encode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ASN1Encode.o `test -f 'asn1/ASN1Encode.cpp' || echo '$(srcdir)/'`asn1/ASN1Encode.cpp

asn1/mqcrypto-ASN1Encode.obj: asn1/ASN1Encode.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ASN1Encode.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ASN1Encode.Tpo -c -o asn1/mqcrypto-ASN1Encode.obj `if test -f 'asn1/ASN1Encode.cpp'; then $(CYGPATH_W) 'asn1/ASN1Encode.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ASN1Encode.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ASN1Encode.Tpo asn1/$(DEPDIR)/mqcrypto-ASN1Encode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ASN1Encode.cpp' object='asn1/mqcrypto-ASN1Encode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ASN1Encode.obj `if test -f 'asn1/ASN1Encode.cpp'; then $(CYGPATH_W) 'asn1/ASN1Encode.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ASN1Encode.cpp'; fi`

asn1/mqcrypto-BIT_STRING.o: asn1/BIT_STRING.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-BIT_STRING.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-BIT_STRING.Tpo -c -o asn1/mqcrypto-BIT_STRING.o `test -f 'asn1/BIT_STRING.cpp' || echo '$(srcdir)/'`asn1/BIT_STRING.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-BIT_STRING.Tpo asn1/$(DEPDIR)/mqcrypto-BIT_STRING.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/BIT_STRING.cpp' object='asn1/mqcrypto-BIT_STRING.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-BIT_STRING.o `test -f 'asn1/BIT_STRING.cpp' || echo '$(srcdir)/'`asn1/BIT_STRING.cpp

asn1/mqcrypto-BIT_STRING.obj: asn1/BIT_STRING.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-BIT_STRING.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-BIT_STRING.Tpo -c -o asn1/mqcrypto-BIT_STRING.obj `if test -f 'asn1/BIT_STRING.cpp'; then $(CYGPATH_W) 'asn1/BIT_STRING.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/BIT_STRING.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-BIT_STRING.Tpo asn1/$(DEPDIR)/mqcrypto-BIT_STRING.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/BIT_STRING.cpp' object='asn1/mqcrypto-BIT_STRING.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-BIT_STRING.obj `if test -f 'asn1/BIT_STRING.cpp'; then $(CYGPATH_W) 'asn1/BIT_STRING.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/BIT_STRING.cpp'; fi`

asn1/mqcrypto-IA5String.o: asn1/IA5String.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-IA5String.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-IA5String.Tpo -c -o asn1/mqcrypto-IA5String.o `test -f 'asn1/IA5String.cpp' || echo '$(srcdir)/'`asn1/IA5String.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-IA5String.Tpo asn1/$(DEPDIR)/mqcrypto-IA5String.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/IA5String.cpp' object='asn1/mqcrypto-IA5String.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-IA5String.o `test -f 'asn1/IA5String.cpp' || echo '$(srcdir)/'`asn1/IA5String.cpp

asn1/mqcrypto-IA5String.obj: asn1/IA5String.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-IA5String.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-IA5String.Tpo -c -o asn1/mqcrypto-IA5String.obj `if test -f 'asn1/IA5String.cpp'; then $(CYGPATH_W) 'asn1/IA5String.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/IA5String.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-IA5String.Tpo asn1/$(DEPDIR)/mqcrypto-IA5String.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/IA5String.cpp' object='asn1/mqcrypto-IA5String.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-IA5String.obj `if test -f 'asn1/IA5String.cpp'; then $(CYGPATH_W) 'asn1/IA5String.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/IA5String.cpp'; fi`

asn1/mqcrypto-MPKCKeypair.o: asn1/MPKCKeypair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCKeypair.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCKeypair.Tpo -c -o asn1/mqcrypto-MPKCKeypair.o `test -f 'asn1/MPKCKeypair.cpp' || echo '$(srcdir)/'`asn1/MPKCKeypair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCKeypair.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCKeypair.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCKeypair.cpp' object='asn1/mqcrypto-MPKCKeypair.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCKeypair.o `test -f 'asn1/MPKCKeypair.cpp' || echo '$(srcdir)/'`asn1/MPKCKeypair.cpp

asn1/mqcrypto-MPKCKeypair.obj: asn1/MPKCKeypair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCKeypair.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCKeypair.Tpo -c -o asn1/mqcrypto-MPKCKeypair.obj `if test -f 'asn1/MPKCKeypair.cpp'; then $(CYGPATH_W) 'asn1/MPKCKeypair.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCKeypair.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCKeypair.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCKeypair.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCKeypair.cpp' object='asn1/mqcrypto-MPKCKeypair.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCKeypair.obj `if test -f 'asn1/MPKCKeypair.cpp'; then $(CYGPATH_W) 'asn1/MPKCKeypair.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCKeypair.cpp'; fi`

asn1/mqcrypto-MPKCMessage.o: asn1/MPKCMessage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCMessage.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCMessage.Tpo -c -o asn1/mqcrypto-MPKCMessage.o `test -f 'asn1/MPKCMessage.cpp' || echo '$(srcdir)/'`asn1/MPKCMessage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCMessage.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCMessage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCMessage.cpp' object='asn1/mqcrypto-MPKCMessage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCMessage.o `test -f 'asn1/MPKCMessage.cpp' || echo '$(srcdir)/'`asn1/MPKCMessage.cpp

asn1/mqcrypto-MPKCMessage.obj: asn1/MPKCMessage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCMessage.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCMessage.Tpo -c -o asn1/mqcrypto-MPKCMessage.obj `if test -f 'asn1/MPKCMessage.cpp'; then $(CYGPATH_W) 'asn1/MPKCMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCMessage.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCMessage.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCMessage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCMessage.cpp' object='asn1/mqcrypto-MPKCMessage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCMessage.obj `if test -f 'asn1/MPKCMessage.cpp'; then $(CYGPATH_W) 'asn1/MPKCMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCMessage.cpp'; fi`

asn1/mqcrypto-MPKCPrivateKey.o: asn1/MPKCPrivateKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCPrivateKey.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCPrivateKey.Tpo -c -o asn1/mqcrypto-MPKCPrivateKey.o `test -f 'asn1/MPKCPrivateKey.cpp' || echo '$(srcdir)/'`asn1/MPKCPrivateKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCPrivateKey.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCPrivateKey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCPrivateKey.cpp' object='asn1/mqcrypto-MPKCPrivateKey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCPrivateKey.o `test -f 'asn1/MPKCPrivateKey.cpp' || echo '$(srcdir)/'`asn1/MPKCPrivateKey.cpp

asn1/mqcrypto-MPKCPrivateKey.obj: asn1/MPKCPrivateKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCPrivateKey.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCPrivateKey.Tpo -c -o asn1/mqcrypto-MPKCPrivateKey.obj `if test -f 'asn1/MPKCPrivateKey.cpp'; then $(CYGPATH_W) 'asn1/MPKCPrivateKey.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCPrivateKey.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCPrivateKey.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCPrivateKey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCPrivateKey.cpp' object='asn1/mqcrypto-MPKCPrivateKey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCPrivateKey.obj `if test -f 'asn1/MPKCPrivateKey.cpp'; then $(CYGPATH_W) 'asn1/MPKCPrivateKey.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCPrivateKey.cpp'; fi`

asn1/mqcrypto-MPKCPublicKey.o: asn1/MPKCPublicKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCPublicKey.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCPublicKey.Tpo -c -o asn1/mqcrypto-MPKCPublicKey.o `test -f 'asn1/MPKCPublicKey.cpp' || echo '$(srcdir)/'`asn1/MPKCPublicKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCPublicKey.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCPublicKey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCPublicKey.cpp' object='asn1/mqcrypto-MPKCPublicKey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCPublicKey.o `test -f 'asn1/MPKCPublicKey.cpp' || echo '$(srcdir)/'`asn1/MPKCPublicKey.cpp

asn1/mqcrypto-MPKCPublicKey.obj: asn1/MPKCPublicKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCPublicKey.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCPublicKey.Tpo -c -o asn1/mqcrypto-MPKCPublicKey.obj `if test -f 'asn1/MPKCPublicKey.cpp'; then $(CYGPATH_W) 'asn1/MPKCPublicKey.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCPublicKey.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCPublicKey.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCPublicKey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCPublicKey.cpp' object='asn1/mqcrypto-MPKCPublicKey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCPublicKey.obj `if test -f 'asn1/MPKCPublicKey.cpp'; then $(CYGPATH_W) 'asn1/MPKCPublicKey.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCPublicKey.cpp'; fi`

asn1/mqcrypto-MPKCSignature.o: asn1/MPKCSignature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCSignature.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCSignature.Tpo -c -o asn1/mqcrypto-MPKCSignature.o `test -f 'asn1/MPKCSignature.cpp' || echo '$(srcdir)/'`asn1/MPKCSignature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCSignature.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCSignature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCSignature.cpp' object='asn1/mqcrypto-MPKCSignature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCSignature.o `test -f 'asn1/MPKCSignature.cpp' || echo '$(srcdir)/'`asn1/MPKCSignature.cpp

asn1/mqcrypto-MPKCSignature.obj: asn1/MPKCSignature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-MPKCSignature.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-MPKCSignature.Tpo -c -o asn1/mqcrypto-MPKCSignature.obj `if test -f 'asn1/MPKCSignature.cpp'; then $(CYGPATH_W) 'asn1/MPKCSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCSignature.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-MPKCSignature.Tpo asn1/$(DEPDIR)/mqcrypto-MPKCSignature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/MPKCSignature.cpp' object='asn1/mqcrypto-MPKCSignature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-MPKCSignature.obj `if test -f 'asn1/MPKCSignature.cpp'; then $(CYGPATH_W) 'asn1/MPKCSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/MPKCSignature.cpp'; fi`

asn1/mqcrypto-OCTET_STRING.o: asn1/OCTET_STRING.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-OCTET_STRING.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-OCTET_STRING.Tpo -c -o asn1/mqcrypto-OCTET_STRING.o `test -f 'asn1/OCTET_STRING.cpp' || echo '$(srcdir)/'`asn1/OCTET_STRING.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-OCTET_STRING.Tpo asn1/$(DEPDIR)/mqcrypto-OCTET_STRING.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/OCTET_STRING.cpp' object='asn1/mqcrypto-OCTET_STRING.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-OCTET_STRING.o `test -f 'asn1/OCTET_STRING.cpp' || echo '$(srcdir)/'`asn1/OCTET_STRING.cpp

asn1/mqcrypto-OCTET_STRING.obj: asn1/OCTET_STRING.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-OCTET_STRING.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-OCTET_STRING.Tpo -c -o asn1/mqcrypto-OCTET_STRING.obj `if test -f 'asn1/OCTET_STRING.cpp'; then $(CYGPATH_W) 'asn1/OCTET_STRING.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/OCTET_STRING.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-OCTET_STRING.Tpo asn1/$(DEPDIR)/mqcrypto-OCTET_STRING.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/OCTET_STRING.cpp' object='asn1/mqcrypto-OCTET_STRING.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-OCTET_STRING.obj `if test -f 'asn1/OCTET_STRING.cpp'; then $(CYGPATH_W) 'asn1/OCTET_STRING.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/OCTET_STRING.cpp'; fi`

asn1/mqcrypto-asn_codecs_prim.o: asn1/asn_codecs_prim.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-asn_codecs_prim.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-asn_codecs_prim.Tpo -c -o asn1/mqcrypto-asn_codecs_prim.o `test -f 'asn1/asn_codecs_prim.cpp' || echo '$(srcdir)/'`asn1/asn_codecs_prim.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-asn_codecs_prim.Tpo asn1/$(DEPDIR)/mqcrypto-asn_codecs_prim.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/asn_codecs_prim.cpp' object='asn1/mqcrypto-asn_codecs_prim.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-asn_codecs_prim.o `test -f 'asn1/asn_codecs_prim.cpp' || echo '$(srcdir)/'`asn1/asn_codecs_prim.cpp

asn1/mqcrypto-asn_codecs_prim.obj: asn1/asn_codecs_prim.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-asn_codecs_prim.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-asn_codecs_prim.Tpo -c -o asn1/mqcrypto-asn_codecs_prim.obj `if test -f 'asn1/asn_codecs_prim.cpp'; then $(CYGPATH_W) 'asn1/asn_codecs_prim.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/asn_codecs_prim.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-asn_codecs_prim.Tpo asn1/$(DEPDIR)/mqcrypto-asn_codecs_prim.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/asn_codecs_prim.cpp' object='asn1/mqcrypto-asn_codecs_prim.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-asn_codecs_prim.obj `if test -f 'asn1/asn_codecs_prim.cpp'; then $(CYGPATH_W) 'asn1/asn_codecs_prim.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/asn_codecs_prim.cpp'; fi`

asn1/mqcrypto-ber_decoder.o: asn1/ber_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ber_decoder.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ber_decoder.Tpo -c -o asn1/mqcrypto-ber_decoder.o `test -f 'asn1/ber_decoder.cpp' || echo '$(srcdir)/'`asn1/ber_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ber_decoder.Tpo asn1/$(DEPDIR)/mqcrypto-ber_decoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ber_decoder.cpp' object='asn1/mqcrypto-ber_decoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ber_decoder.o `test -f 'asn1/ber_decoder.cpp' || echo '$(srcdir)/'`asn1/ber_decoder.cpp

asn1/mqcrypto-ber_decoder.obj: asn1/ber_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ber_decoder.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ber_decoder.Tpo -c -o asn1/mqcrypto-ber_decoder.obj `if test -f 'asn1/ber_decoder.cpp'; then $(CYGPATH_W) 'asn1/ber_decoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ber_decoder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ber_decoder.Tpo asn1/$(DEPDIR)/mqcrypto-ber_decoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ber_decoder.cpp' object='asn1/mqcrypto-ber_decoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ber_decoder.obj `if test -f 'asn1/ber_decoder.cpp'; then $(CYGPATH_W) 'asn1/ber_decoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ber_decoder.cpp'; fi`

asn1/mqcrypto-ber_tlv_length.o: asn1/ber_tlv_length.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ber_tlv_length.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ber_tlv_length.Tpo -c -o asn1/mqcrypto-ber_tlv_length.o `test -f 'asn1/ber_tlv_length.cpp' || echo '$(srcdir)/'`asn1/ber_tlv_length.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ber_tlv_length.Tpo asn1/$(DEPDIR)/mqcrypto-ber_tlv_length.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ber_tlv_length.cpp' object='asn1/mqcrypto-ber_tlv_length.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ber_tlv_length.o `test -f 'asn1/ber_tlv_length.cpp' || echo '$(srcdir)/'`asn1/ber_tlv_length.cpp

asn1/mqcrypto-ber_tlv_length.obj: asn1/ber_tlv_length.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ber_tlv_length.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ber_tlv_length.Tpo -c -o asn1/mqcrypto-ber_tlv_length.obj `if test -f 'asn1/ber_tlv_length.cpp'; then $(CYGPATH_W) 'asn1/ber_tlv_length.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ber_tlv_length.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ber_tlv_length.Tpo asn1/$(DEPDIR)/mqcrypto-ber_tlv_length.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ber_tlv_length.cpp' object='asn1/mqcrypto-ber_tlv_length.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ber_tlv_length.obj `if test -f 'asn1/ber_tlv_length.cpp'; then $(CYGPATH_W) 'asn1/ber_tlv_length.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ber_tlv_length.cpp'; fi`

asn1/mqcrypto-ber_tlv_tag.o: asn1/ber_tlv_tag.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ber_tlv_tag.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ber_tlv_tag.Tpo -c -o asn1/mqcrypto-ber_tlv_tag.o `test -f 'asn1/ber_tlv_tag.cpp' || echo '$(srcdir)/'`asn1/ber_tlv_tag.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ber_tlv_tag.Tpo asn1/$(DEPDIR)/mqcrypto-ber_tlv_tag.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ber_tlv_tag.cpp' object='asn1/mqcrypto-ber_tlv_tag.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ber_tlv_tag.o `test -f 'asn1/ber_tlv_tag.cpp' || echo '$(srcdir)/'`asn1/ber_tlv_tag.cpp

asn1/mqcrypto-ber_tlv_tag.obj: asn1/ber_tlv_tag.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-ber_tlv_tag.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-ber_tlv_tag.Tpo -c -o asn1/mqcrypto-ber_tlv_tag.obj `if test -f 'asn1/ber_tlv_tag.cpp'; then $(CYGPATH_W) 'asn1/ber_tlv_tag.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ber_tlv_tag.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-ber_tlv_tag.Tpo asn1/$(DEPDIR)/mqcrypto-ber_tlv_tag.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/ber_tlv_tag.cpp' object='asn1/mqcrypto-ber_tlv_tag.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-ber_tlv_tag.obj `if test -f 'asn1/ber_tlv_tag.cpp'; then $(CYGPATH_W) 'asn1/ber_tlv_tag.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/ber_tlv_tag.cpp'; fi`

asn1/mqcrypto-constr_SEQUENCE.o: asn1/constr_SEQUENCE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-constr_SEQUENCE.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-constr_SEQUENCE.Tpo -c -o asn1/mqcrypto-constr_SEQUENCE.o `test -f 'asn1/constr_SEQUENCE.cpp' || echo '$(srcdir)/'`asn1/constr_SEQUENCE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-constr_SEQUENCE.Tpo asn1/$(DEPDIR)/mqcrypto-constr_SEQUENCE.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/constr_SEQUENCE.cpp' object='asn1/mqcrypto-constr_SEQUENCE.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-constr_SEQUENCE.o `test -f 'asn1/constr_SEQUENCE.cpp' || echo '$(srcdir)/'`asn1/constr_SEQUENCE.cpp

asn1/mqcrypto-constr_SEQUENCE.obj: asn1/constr_SEQUENCE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-constr_SEQUENCE.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-constr_SEQUENCE.Tpo -c -o asn1/mqcrypto-constr_SEQUENCE.obj `if test -f 'asn1/constr_SEQUENCE.cpp'; then $(CYGPATH_W) 'asn1/constr_SEQUENCE.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/constr_SEQUENCE.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-constr_SEQUENCE.Tpo asn1/$(DEPDIR)/mqcrypto-constr_SEQUENCE.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/constr_SEQUENCE.cpp' object='asn1/mqcrypto-constr_SEQUENCE.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-constr_SEQUENCE.obj `if test -f 'asn1/constr_SEQUENCE.cpp'; then $(CYGPATH_W) 'asn1/constr_SEQUENCE.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/constr_SEQUENCE.cpp'; fi`

asn1/mqcrypto-constr_TYPE.o: asn1/constr_TYPE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-constr_TYPE.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-constr_TYPE.Tpo -c -o asn1/mqcrypto-constr_TYPE.o `test -f 'asn1/constr_TYPE.cpp' || echo '$(srcdir)/'`asn1/constr_TYPE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-constr_TYPE.Tpo asn1/$(DEPDIR)/mqcrypto-constr_TYPE.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/constr_TYPE.cpp' object='asn1/mqcrypto-constr_TYPE.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-constr_TYPE.o `test -f 'asn1/constr_TYPE.cpp' || echo '$(srcdir)/'`asn1/constr_TYPE.cpp

asn1/mqcrypto-constr_TYPE.obj: asn1/constr_TYPE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-constr_TYPE.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-constr_TYPE.Tpo -c -o asn1/mqcrypto-constr_TYPE.obj `if test -f 'asn1/constr_TYPE.cpp'; then $(CYGPATH_W) 'asn1/constr_TYPE.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/constr_TYPE.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-constr_TYPE.Tpo asn1/$(DEPDIR)/mqcrypto-constr_TYPE.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/constr_TYPE.cpp' object='asn1/mqcrypto-constr_TYPE.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-constr_TYPE.obj `if test -f 'asn1/constr_TYPE.cpp'; then $(CYGPATH_W) 'asn1/constr_TYPE.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/constr_TYPE.cpp'; fi`

asn1/mqcrypto-constraints.o: asn1/constraints.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-constraints.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-constraints.Tpo -c -o asn1/mqcrypto-constraints.o `test -f 'asn1/constraints.cpp' || echo '$(srcdir)/'`asn1/constraints.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-constraints.Tpo asn1/$(DEPDIR)/mqcrypto-constraints.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/constraints.cpp' object='asn1/mqcrypto-constraints.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-constraints.o `test -f 'asn1/constraints.cpp' || echo '$(srcdir)/'`asn1/constraints.cpp

asn1/mqcrypto-constraints.obj: asn1/constraints.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-constraints.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-constraints.Tpo -c -o asn1/mqcrypto-constraints.obj `if test -f 'asn1/constraints.cpp'; then $(CYGPATH_W) 'asn1/constraints.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/constraints.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-constraints.Tpo asn1/$(DEPDIR)/mqcrypto-constraints.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/constraints.cpp' object='asn1/mqcrypto-constraints.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-constraints.obj `if test -f 'asn1/constraints.cpp'; then $(CYGPATH_W) 'asn1/constraints.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/constraints.cpp'; fi`

asn1/mqcrypto-der_encoder.o: asn1/der_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-der_encoder.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-der_encoder.Tpo -c -o asn1/mqcrypto-der_encoder.o `test -f 'asn1/der_encoder.cpp' || echo '$(srcdir)/'`asn1/der_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-der_encoder.Tpo asn1/$(DEPDIR)/mqcrypto-der_encoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/der_encoder.cpp' object='asn1/mqcrypto-der_encoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-der_encoder.o `test -f 'asn1/der_encoder.cpp' || echo '$(srcdir)/'`asn1/der_encoder.cpp

asn1/mqcrypto-der_encoder.obj: asn1/der_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-der_encoder.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-der_encoder.Tpo -c -o asn1/mqcrypto-der_encoder.obj `if test -f 'asn1/der_encoder.cpp'; then $(CYGPATH_W) 'asn1/der_encoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/der_encoder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-der_encoder.Tpo asn1/$(DEPDIR)/mqcrypto-der_encoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/der_encoder.cpp' object='asn1/mqcrypto-der_encoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-der_encoder.obj `if test -f 'asn1/der_encoder.cpp'; then $(CYGPATH_W) 'asn1/der_encoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/der_encoder.cpp'; fi`

asn1/mqcrypto-per_decoder.o: asn1/per_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_decoder.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_decoder.Tpo -c -o asn1/mqcrypto-per_decoder.o `test -f 'asn1/per_decoder.cpp' || echo '$(srcdir)/'`asn1/per_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_decoder.Tpo asn1/$(DEPDIR)/mqcrypto-per_decoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_decoder.cpp' object='asn1/mqcrypto-per_decoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_decoder.o `test -f 'asn1/per_decoder.cpp' || echo '$(srcdir)/'`asn1/per_decoder.cpp

asn1/mqcrypto-per_decoder.obj: asn1/per_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_decoder.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_decoder.Tpo -c -o asn1/mqcrypto-per_decoder.obj `if test -f 'asn1/per_decoder.cpp'; then $(CYGPATH_W) 'asn1/per_decoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_decoder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_decoder.Tpo asn1/$(DEPDIR)/mqcrypto-per_decoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_decoder.cpp' object='asn1/mqcrypto-per_decoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_decoder.obj `if test -f 'asn1/per_decoder.cpp'; then $(CYGPATH_W) 'asn1/per_decoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_decoder.cpp'; fi`

asn1/mqcrypto-per_encoder.o: asn1/per_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_encoder.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_encoder.Tpo -c -o asn1/mqcrypto-per_encoder.o `test -f 'asn1/per_encoder.cpp' || echo '$(srcdir)/'`asn1/per_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_encoder.Tpo asn1/$(DEPDIR)/mqcrypto-per_encoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_encoder.cpp' object='asn1/mqcrypto-per_encoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_encoder.o `test -f 'asn1/per_encoder.cpp' || echo '$(srcdir)/'`asn1/per_encoder.cpp

asn1/mqcrypto-per_encoder.obj: asn1/per_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_encoder.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_encoder.Tpo -c -o asn1/mqcrypto-per_encoder.obj `if test -f 'asn1/per_encoder.cpp'; then $(CYGPATH_W) 'asn1/per_encoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_encoder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_encoder.Tpo asn1/$(DEPDIR)/mqcrypto-per_encoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_encoder.cpp' object='asn1/mqcrypto-per_encoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_encoder.obj `if test -f 'asn1/per_encoder.cpp'; then $(CYGPATH_W) 'asn1/per_encoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_encoder.cpp'; fi`

asn1/mqcrypto-per_opentype.o: asn1/per_opentype.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_opentype.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_opentype.Tpo -c -o asn1/mqcrypto-per_opentype.o `test -f 'asn1/per_opentype.cpp' || echo '$(srcdir)/'`asn1/per_opentype.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_opentype.Tpo asn1/$(DEPDIR)/mqcrypto-per_opentype.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_opentype.cpp' object='asn1/mqcrypto-per_opentype.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_opentype.o `test -f 'asn1/per_opentype.cpp' || echo '$(srcdir)/'`asn1/per_opentype.cpp

asn1/mqcrypto-per_opentype.obj: asn1/per_opentype.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_opentype.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_opentype.Tpo -c -o asn1/mqcrypto-per_opentype.obj `if test -f 'asn1/per_opentype.cpp'; then $(CYGPATH_W) 'asn1/per_opentype.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_opentype.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_opentype.Tpo asn1/$(DEPDIR)/mqcrypto-per_opentype.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_opentype.cpp' object='asn1/mqcrypto-per_opentype.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_opentype.obj `if test -f 'asn1/per_opentype.cpp'; then $(CYGPATH_W) 'asn1/per_opentype.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_opentype.cpp'; fi`

asn1/mqcrypto-per_support.o: asn1/per_support.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_support.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_support.Tpo -c -o asn1/mqcrypto-per_support.o `test -f 'asn1/per_support.cpp' || echo '$(srcdir)/'`asn1/per_support.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_support.Tpo asn1/$(DEPDIR)/mqcrypto-per_support.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_support.cpp' object='asn1/mqcrypto-per_support.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_support.o `test -f 'asn1/per_support.cpp' || echo '$(srcdir)/'`asn1/per_support.cpp

asn1/mqcrypto-per_support.obj: asn1/per_support.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-per_support.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-per_support.Tpo -c -o asn1/mqcrypto-per_support.obj `if test -f 'asn1/per_support.cpp'; then $(CYGPATH_W) 'asn1/per_support.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_support.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-per_support.Tpo asn1/$(DEPDIR)/mqcrypto-per_support.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/per_support.cpp' object='asn1/mqcrypto-per_support.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-per_support.obj `if test -f 'asn1/per_support.cpp'; then $(CYGPATH_W) 'asn1/per_support.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/per_support.cpp'; fi`

asn1/mqcrypto-xer_decoder.o: asn1/xer_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-xer_decoder.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-xer_decoder.Tpo -c -o asn1/mqcrypto-xer_decoder.o `test -f 'asn1/xer_decoder.cpp' || echo '$(srcdir)/'`asn1/xer_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-xer_decoder.Tpo asn1/$(DEPDIR)/mqcrypto-xer_decoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/xer_decoder.cpp' object='asn1/mqcrypto-xer_decoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-xer_decoder.o `test -f 'asn1/xer_decoder.cpp' || echo '$(srcdir)/'`asn1/xer_decoder.cpp

asn1/mqcrypto-xer_decoder.obj: asn1/xer_decoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-xer_decoder.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-xer_decoder.Tpo -c -o asn1/mqcrypto-xer_decoder.obj `if test -f 'asn1/xer_decoder.cpp'; then $(CYGPATH_W) 'asn1/xer_decoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/xer_decoder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-xer_decoder.Tpo asn1/$(DEPDIR)/mqcrypto-xer_decoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/xer_decoder.cpp' object='asn1/mqcrypto-xer_decoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-xer_decoder.obj `if test -f 'asn1/xer_decoder.cpp'; then $(CYGPATH_W) 'asn1/xer_decoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/xer_decoder.cpp'; fi`

asn1/mqcrypto-xer_encoder.o: asn1/xer_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-xer_encoder.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-xer_encoder.Tpo -c -o asn1/mqcrypto-xer_encoder.o `test -f 'asn1/xer_encoder.cpp' || echo '$(srcdir)/'`asn1/xer_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-xer_encoder.Tpo asn1/$(DEPDIR)/mqcrypto-xer_encoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/xer_encoder.cpp' object='asn1/mqcrypto-xer_encoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-xer_encoder.o `test -f 'asn1/xer_encoder.cpp' || echo '$(srcdir)/'`asn1/xer_encoder.cpp

asn1/mqcrypto-xer_encoder.obj: asn1/xer_encoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-xer_encoder.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-xer_encoder.Tpo -c -o asn1/mqcrypto-xer_encoder.obj `if test -f 'asn1/xer_encoder.cpp'; then $(CYGPATH_W) 'asn1/xer_encoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/xer_encoder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-xer_encoder.Tpo asn1/$(DEPDIR)/mqcrypto-xer_encoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/xer_encoder.cpp' object='asn1/mqcrypto-xer_encoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-xer_encoder.obj `if test -f 'asn1/xer_encoder.cpp'; then $(CYGPATH_W) 'asn1/xer_encoder.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/xer_encoder.cpp'; fi`

asn1/mqcrypto-xer_support.o: asn1/xer_support.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-xer_support.o -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-xer_support.Tpo -c -o asn1/mqcrypto-xer_support.o `test -f 'asn1/xer_support.cpp' || echo '$(srcdir)/'`asn1/xer_support.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-xer_support.Tpo asn1/$(DEPDIR)/mqcrypto-xer_support.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/xer_support.cpp' object='asn1/mqcrypto-xer_support.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-xer_support.o `test -f 'asn1/xer_support.cpp' || echo '$(srcdir)/'`asn1/xer_support.cpp

asn1/mqcrypto-xer_support.obj: asn1/xer_support.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asn1/mqcrypto-xer_support.obj -MD -MP -MF asn1/$(DEPDIR)/mqcrypto-xer_support.Tpo -c -o asn1/mqcrypto-xer_support.obj `if test -f 'asn1/xer_support.cpp'; then $(CYGPATH_W) 'asn1/xer_support.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/xer_support.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) asn1/$(DEPDIR)/mqcrypto-xer_support.Tpo asn1/$(DEPDIR)/mqcrypto-xer_support.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asn1/xer_support.cpp' object='asn1/mqcrypto-xer_support.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqcrypto_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asn1/mqcrypto-xer_support.obj `if test -f 'asn1/xer_support.cpp'; then $(CYGPATH_W) 'asn1/xer_support.cpp'; else $(CYGPATH_W) '$(srcdir)/asn1/xer_support.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f asn1/$(DEPDIR)/$(am__dirstamp)
	-rm -f asn1/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) asn1/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) asn1/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
